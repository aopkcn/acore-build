name: AC_Docker编译

on:
  workflow_dispatch:
  repository_dispatch:
    # types:
    #   - ac
concurrency:
  group: ${{ github.workflow }})
  cancel-in-progress: true
jobs:
  build-ubuntu:
    name: 执行编译
    runs-on: ubuntu-20.04
    steps:
      - name: 拉取核心代码
        uses: actions/checkout@v4
        with:
          repository: 'azerothcore/azerothcore-wotlk'
          ref: 'master'

      - name: 拉取当前项目
        uses: actions/checkout@v4
        with:
          ref: 'build'
          path: 'build'

      - name: 拉取Eluna代码
        uses: actions/checkout@v4
        with:
          repository: 'azerothcore/mod-eluna'  
          ref: 'master'
          path: 'modules/mod-eluna'

      - name: 下载并替换MotdMgr.cpp
        run: |
          curl -L -o MotdMgr.cpp https://raw.githubusercontent.com/aopkcn/acore-build/build/MotdMgr.cpp
          mv -f MotdMgr.cpp src/server/game/Motd/MotdMgr.cpp

      - name: 登录Docker容器服务
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }} 
          password: ${{ secrets.DOCKERHUB_TOKEN }} 

      - name: 登录GitHub容器服务
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.TOKEN }}

      - name: 登录阿里云容器服务
        uses: docker/login-action@v3
        with:
          registry: registry.cn-chengdu.aliyuncs.com
          username: ${{ secrets.ALYUN_NAME }}
          password: ${{ secrets.ALYUN_TOKEN }}

      - name: 设置编译版本
        id: version
        run: |
            version=$(curl -s https://api.github.com/repos/azerothcore/azerothcore-wotlk/commits/master?per_page=1 | jq -r '.sha')
            echo "version=$version" >> $GITHUB_OUTPUT

      - name: 设置 Docker Buildx 环境
        uses: docker/setup-buildx-action@v3

      - name: 编译 worldserver 
        uses: ./build/.github/ac_docker-build 
        with:
          component-name: worldserver 
          version: ${{ steps.version.outputs.version }} 
          push: true 

      - name: 编译 authserver 
        uses: ./build/.github/ac_docker-build
        with:
          component-name: authserver
          version: ${{ steps.version.outputs.version }}
          push: true

      - name: 编译 db-import 
        uses: ./build/.github/ac_docker-build
        with:
          component-name: db-import
          version: ${{ steps.version.outputs.version }}
          push: true

      - name: 编译 client-data
        uses: ./build/.github/ac_docker-build
        with:
          component-name: client-data
          version: ${{ steps.version.outputs.version }}
          push: true

      - name: 编译 tools
        uses: ./build/.github/ac_docker-build
        with:
          component-name: tools
          version: ${{ steps.version.outputs.version }}
          push: true

      - name: 编译 dev-server
        uses: ./build/.github/ac_docker-build
        with:
          component-name: dev
          version: ${{ steps.version.outputs.version }}
          push: true
          dockerfile: apps/docker/Dockerfile.dev-server

